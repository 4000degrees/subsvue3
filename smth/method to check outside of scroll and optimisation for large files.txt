visibleY() {
  var el = this.$el
  var rect = el.getBoundingClientRect(),
    top = rect.top,
    height = rect.height,
    el = el.parentNode
  // Check if bottom of the element is off the page
  if (rect.bottom < 0) return false
  // Check its within the document viewport
  if (top > document.documentElement.clientHeight) return false
  do {
    rect = el.getBoundingClientRect()
    if (top <= rect.bottom === false) return false
    // Check if the element is out of view due to a container scrolling
    if ((top + height) <= rect.top) return false
    el = el.parentNode
  } while (el != document.body)
  return true
}


mounted() {
/* optimisation: when editing a huge subtitles file,
contenteditable in chromium becuse very very laggy. this is
 because it has to realculate all the following text whe all subtitle element
 are inline. so this code makes every 5th element block when it is out of view. this is test
 stuff. when selecting all text to copy there will be additional
 line breakes around block elements. */
// let ii = this.index+1
// let nth = (Math.floor( ii / 50 )) - (Math.floor( (ii-1) / 50 ))
// console.log(nth)
//
// if (nth) {
//   this.$parent.$el.addEventListener("scroll", function(event) {
//     if(this.visibleY()) {
//       this.$el.style.display="inline";
//       console.log("inline");
//     } else {
//       this.$el.style.display="block";
//       console.log("block");
//     }
//   }.bind(this))
// }
}
